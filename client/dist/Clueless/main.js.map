{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/messages/CreateGame.ts","webpack:///./src/messages/JoinGame.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#gameboard-container {\\n  position: relative;\\n  top: 30px;\\n  text-align: center;\\n}\\n\\n#gameboard {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 75%;\\n}\\n\\n#toast-button {\\n  margin-top: 50px;\\n}\\n\\n.game-title {\\n  margin-top: 20px;\\n  display: block;\\n  text-align: center;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row game-title\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div *ngIf=\\\"!isConnectedToGame\\\">\\n    <app-landing-page (landingPageStatusChange)=\\\"handleLandingPageStatusChange($event)\\\"></app-landing-page>\\n  </div>\\n  \\n  <div *ngIf=\\\"isConnectedToGame\\\">\\n    <app-game></app-game>\\n  </div>\\n</div>\\n  \\n  \"","import { JoinGame } from 'src/messages/JoinGame';\nimport { CreateGame } from './../messages/CreateGame';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private title: String = 'Clue-Less';\n  private isConnectedToGame: boolean;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.isConnectedToGame = false;\n  }\n\n  handleLandingPageStatusChange(event) {\n    console.log(event);\n    if(event instanceof CreateGame) {\n\n    } else if (event instanceof JoinGame) {\n\n    }\n\n    this.isConnectedToGame = true;\n  }\n\n}\n","import { SocketService } from './socket.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { NgModule } from '@angular/core';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ToastrModule.forRoot(), // ToastrModule added\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".gameboard {\\n    margin:auto;\\n    width: 100%;\\n}\"","module.exports = \"<div id=\\\"gameboard-container\\\" class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n\\n      <img id=\\\"gameboard\\\" src=\\\"../../assets/gameboard.jpg\\\"/>\\n\\n    </div>\\n    <div class=\\\"row\\\">\\n      <button id=\\\"toast-button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showToaster()\\\">\\n        Show Toast\\n      </button>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr'; \nimport { SocketService } from '../socket.service';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n\n   // Dependency injection syntax\n   constructor(private socketService: SocketService, \n               private toastr: ToastrService) { \n    \n  }\n\n  ngOnInit() {\n   \n  }\n\n  showToaster(){\n    console.log('show toast');\n    this.toastr.success('Hello, I\\'m the toastr message.')\n }\n\n}\n","module.exports = \".header-menu {\\n  width: 60%;\\n  margin: 27px auto;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.form-title {\\n  text-align: center;\\n}\\n\\n.how-to-play-header {\\n  text-align: center;\\n}\\n\\nselect:required:invalid {\\n  color: gray;\\n}\\n\\noption[value=\\\"\\\"][disabled] {\\n  display: none;\\n}\\n\\noption {\\n  color: black;\\n}\\n\\np {\\n  margin-bottom: 8px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"menu\\\">\\n    <div class=\\\"header-menu\\\">\\n      <h3 class=\\\"how-to-play-header\\\">How To Play</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Create a new game</h4>\\n        <div>\\n          <p>1. Enter a username</p>\\n          <p>2. Select the number of players.</p>\\n          <p>3. Click on new game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"creatorPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!-- <input [(ngModel)]=\\\"numberOfPlayers\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Enter the number of players\\\"\\n              required> -->\\n              <select [(ngModel)]=\\\"numberOfPlayers\\\" name=\\\"numberOfPlayers\\\" class=\\\"form-control\\\">\\n                  <option disabled selected>Select the number of players</option>\\n                  <option value=\\\"3\\\">3</option>\\n                  <option value=\\\"4\\\">4</option>\\n                  <option value=\\\"5\\\">5</option>\\n                  <option value=\\\"6\\\">6</option>\\n              </select>\\n\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"createGame()\\\">New Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"createGameError\\\">\\n          <p>{{ createGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Join an existing game</h4>\\n        <div>\\n          <p>1. Enter a username and the room id.</p>\\n          <p>2. Enter a room id.</p>\\n          <p>3. Click on join game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"joiningPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" id=\\\"nameJoin\\\"\\n              placeholder=\\\"Enter your name\\\" required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"roomId\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"room\\\" id=\\\"room\\\" placeholder=\\\"Enter Game ID\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button id=\\\"join\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"joinGame()\\\">Join Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"joinGameError\\\">\\n          <p>{{ joinGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SocketService } from './../socket.service';\nimport { JoinGame } from 'src/messages/JoinGame';\nimport { CreateGame } from './../../messages/CreateGame';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  @Output() landingPageStatusChange = new EventEmitter();\n\n  private creatorPlayerName: string = '';\n  private numberOfPlayers: number;\n  private createGameError: boolean = false;\n  private createGameErrorMessage: string = '';\n\n  private joiningPlayerName: string = '';\n  private roomId: string = '';\n  private joinGameError: boolean = false;\n  private joinGameErrorMessage: string = '';\n\n  // Dependency injection syntax\n  constructor(private socketService: SocketService) {   \n  }\n\n  ngOnInit() {\n  }\n\n  createGame(): void {\n    if(this.creatorPlayerName === '') {\n      this.createGameErrorMessage = 'Please enter your name.';\n      this.createGameError = true;\n      return;\n    }\n\n    if(this.numberOfPlayers === undefined) {\n      this.createGameErrorMessage ='Please enter the number of players name.';\n      this.createGameError = true;\n      return;\n    }\n\n    this.createGameError = false;\n    this.socketService.createGame(this.creatorPlayerName, this.numberOfPlayers);\n\n    const event = new CreateGame(this.creatorPlayerName, this.numberOfPlayers);\n    this.landingPageStatusChange.emit(event);\n  }\n\n  joinGame(): void {\n    if(this.joiningPlayerName === '') {\n      this.joinGameErrorMessage = 'Please enter your name.';\n      this.joinGameError = true;\n      return;\n    }\n\n    if(this.roomId === '') {\n      this.joinGameErrorMessage = 'Please enter the room id.';\n      this.joinGameError = true;\n      return;\n    }\n\n    this.joinGameError = false;\n\n    this.socketService.joinGame(this.joiningPlayerName, this.roomId);\n\n    const event = new JoinGame(this.joiningPlayerName, this.roomId);\n    this.landingPageStatusChange.emit(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\n\n/**\n * Singleton service\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  private socket: SocketIOClient.Socket;\n  private messages: any[];\n\n  constructor() {\n    this.messages = [];\n    this.socket = io.connect();\n    this.init();\n  }\n\n  private init() {\n    console.log('initializing sockets');\n    this.socket.on('connect', (msg: any) => {\n      // this.messages.push(msg);\n      console.log('connection received from server...');\n\n    })\n\n    // this.socket.emit('event1', { \n    //   msg: 'client to server, can you hear me server?';\n    // })\n\n    // this.socket.on('event2', (data: any) => {\n    //   console.log(data.msg);\n    //   this.socket.emit('event3', {\n    //       msg: 'Yes, its working for me!!'\n    //   });\n    // });\n    this.socket.on('new-game-created', (msg:any) => {\n      console.log('new game created...');\n\n      const name = msg.name;\n      const roomName = msg.roomName;\n      console.log(`name: ${name}`);\n      console.log(`roomName: ${roomName}`);\n    })\n  }\n\n  createGame(name: string, numPlayers: number) {\n    const message = {\n      name: name,\n      numPlayers: numPlayers\n    }\n\n    this.socket.emit('create-game', message);\n  }\n\n  joinGame(name: string, roomId: string) {\n    const message = {\n      name: name,\n      roomId: roomId\n    }\n\n    this.socket.emit('player-join-game', message);\n  }\n\n  sendMessage(messageText: string) {\n    const message = {\n      text: messageText\n    };\n    this.socket.emit('send-message', message);\n    // console.log(message.text);\n  }\n  //https://stackoverflow.com/questions/47161589/how-to-use-socket-io-client-in-angular-4\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","export class CreateGame {\n    \n    playerName: string;\n    numPlayers: number;\n\n    constructor(playerName:string, numPlayers: number) {\n        this.playerName = playerName;\n        this.numPlayers = numPlayers;\n    }\n}","export class JoinGame {\n    \n    playerName: string;\n    roomId: string;\n\n    constructor(playerName:string, roomId: string) {\n        this.playerName = playerName;\n        this.roomId = roomId;\n    }\n}","/* (ignored) */"],"sourceRoot":""}