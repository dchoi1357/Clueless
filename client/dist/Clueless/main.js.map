{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/landing-page/landing-page.component.css","webpack:///./src/app/landing-page/landing-page.component.html","webpack:///./src/app/landing-page/landing-page.component.ts","webpack:///./src/app/socket.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,wCAAwC,uBAAuB,cAAc,uBAAuB,GAAG,gBAAgB,mBAAmB,sBAAsB,uBAAuB,eAAe,GAAG,mBAAmB,qBAAqB,GAAG,iBAAiB,qBAAqB,mBAAmB,uBAAuB,GAAG,cAAc,4BAA4B,GAAG,0BAA0B,4BAA4B,GAAG,G;;;;;;;;;;;ACA7a,qFAAqF,UAAU,uFAAuF,SAAS,oZAAoZ,UAAU,ypD;;;;;;;;;;;;;;;;;;;;;;;;;;ACA5iB;AACC;AACI;AAOtD;IAQE,sBAAoB,YAAsB,EACtB,aAA4B;QAD5B,iBAAY,GAAZ,YAAY,CAAU;QACtB,kBAAa,GAAb,aAAa,CAAe;QARxC,UAAK,GAAW,WAAW,CAAC;IAUpC,CAAC;IAED,+BAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,6BAA6B;QAC7B,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAClD,OAAO,CAAC,GAAG,CAAC,+CAA+C,CAAC,CAAC;YAC7D,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACzB,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,qCAAqC;YACrC,yCAAyC;YACzC,KAAI,CAAC,wBAAwB,EAAE,CAAC;QAElC,CAAC,CAAC,CAAC;QAEH,4BAA4B;QAC5B,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAC9C,OAAO,CAAC,GAAG,CAAC,2CAA2C,CAAC,CAAC;YACzD,KAAI,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC;YACrB,KAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YACzB,IAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;YAC5B,IAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC;YACpC,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,EAAE,EAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;YAC7C,CAAC;YACD,qCAAqC;YACrC,yCAAyC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAwB,GAAxB,UAAyB,WAA+B;QAA/B,qDAA+B;QACtD,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QACzB,EAAE,EAAC,WAAW,IAAI,SAAS,CAAC,CAAC,CAAC;YAC5B,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,CAAC;QAC5D,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,QAAQ,CAAC,cAAc,CAAC,wBAAwB,CAAC,CAAC,KAAK,EAAE,CAAC;YAC1D,GAAG,EAAc,UAAW,EAAX,2BAAW,EAAX,yBAAW,EAAX,IAAW;gBAAxB,IAAI,KAAK;gBACX,IAAI,GAAG,GAAQ,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;gBAC9C,EAAE,EAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC;oBACpB,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACtB,CAAC;aACF;QACH,CAAC;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;IAChC,CAAC;IAEO,gCAAS,GAAjB,UAAkB,OAAO;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC,CAAC;IACpF,CAAC;IAEO,8CAAuB,GAA/B;QACE,IAAI,QAAQ,GAAQ,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QAC9D,IAAI,WAAW,GAAQ,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAC9D,IAAI,OAAO,GAAQ,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,UAAU,GAAQ,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;QAC5D,IAAI,OAAO,GAAQ,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,aAAa,GAAQ,QAAQ,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;QAElE,IAAI,iBAAiB,CAAC;QACtB,EAAE,EAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;YACpB,iBAAiB,GAAG,gBAAgB,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YAC/B,iBAAiB,GAAG,aAAa,CAAC;QACpC,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,iBAAiB,GAAG,SAAS,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;YAC7B,iBAAiB,GAAG,YAAY,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;YAC1B,iBAAiB,GAAG,SAAS,CAAC;QAChC,CAAC;QAAC,IAAI,CAAC,EAAE,EAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,iBAAiB,GAAG,eAAe,CAAC;QACtC,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,iBAAiB,CAAC,CAAC;QACrD,EAAE,EAAC,iBAAiB,IAAI,SAAS,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YAC3E,2CAA2C;YAC3C,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC;QACjC,CAAC;IAEH,CAAC;IAhGU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCASkC,mEAAQ;YACP,6DAAa;OATrC,YAAY,CAiGxB;IAAD,mBAAC;CAAA;AAjGwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRiC;AACqB;AACtC;AACC;AAC6B;AAC1B;AAGE;AAC8B;AACvB;AAkBtD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,yFAAoB;gBACpB,kEAAa;aACd;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,0DAAW;gBACX,oEAAS,CAAC,OAAO,EAAE;gBACnB,uDAAY,CAAC,OAAO,EAAE;aACvB;YACD,SAAS,EAAE,CAAC,yEAAc,CAAC;YAC3B,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7BtB,8BAA8B,wBAAwB,iBAAiB,GAAG,C;;;;;;;;;;;ACA1E,kwBAAkwB,2+C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhtB;AACP;AACO;AACI;AAOtD;IAEE,8BAA8B;IAC9B,uBAAoB,YAAsB,EAChC,aAA4B,EAC5B,MAAqB;QAFX,iBAAY,GAAZ,YAAY,CAAU;QAChC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAe;IAE/B,CAAC;IAED,gCAAQ,GAAR;QAAA,iBAqBC;QApBC,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAClD,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;YACrD,yBAAyB;YACzB,6BAA6B;YAC7B,gCAAgC;YAChC,oCAAoC;YACpC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,0BAA0B,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAC/D,CAAC,CAAC;QAEF,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC,SAAS,CAAC,UAAC,GAAG;YAClD,OAAO,CAAC,GAAG,CAAC,gDAAgD,CAAC,CAAC;YAC9D,IAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;YAC1B,IAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YACjC,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI;YACxB,IAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,eAAa,QAAU,CAAC,CAAC;YACrC,OAAO,CAAC,GAAG,CAAC,WAAS,IAAM,CAAC,CAAC;YAC7B,OAAO,CAAC,GAAG,CAAC,YAAU,KAAO,CAAC,CAAC;YAC/B,KAAI,CAAC,MAAM,CAAC,OAAO,CAAI,IAAI,uBAAkB,KAAO,CAAC,CAAC;QACxD,CAAC,CAAC;IACJ,CAAC;IAED,mCAAW,GAAX;QACE,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,iCAAiC,CAAC;IACxD,CAAC;IAED;;OAEG;IACH,wCAAgB,GAAhB;IAEA,CAAC;IAED,iCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE;YAC9B,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAhDU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAIkC,mEAAQ;YACjB,6DAAa;YACpB,wDAAa;OALpB,aAAa,CAkDzB;IAAD,oBAAC;CAAA;AAlDyB;;;;;;;;;;;;ACV1B,gCAAgC,eAAe,sBAAsB,GAAG,YAAY,eAAe,GAAG,iBAAiB,uBAAuB,GAAG,yBAAyB,uBAAuB,GAAG,6BAA6B,gBAAgB,GAAG,kCAAkC,kBAAkB,GAAG,YAAY,iBAAiB,GAAG,OAAO,uBAAuB,GAAG,G;;;;;;;;;;;ACA5W,qjDAAqjD,0BAA0B,kiCAAkiC,wBAAwB,mE;;;;;;;;;;;;;;;;;;;;;;;;;ACAjkF;AACpB;AASpD;IAcE,8BAA8B;IAC9B,8BAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAbhD,0DAA0D;QAElD,sBAAiB,GAAW,EAAE,CAAC;QAE/B,oBAAe,GAAY,KAAK,CAAC;QACjC,2BAAsB,GAAW,EAAE,CAAC;QAEpC,sBAAiB,GAAW,EAAE,CAAC;QAC/B,WAAM,GAAW,EAAE,CAAC;QACpB,kBAAa,GAAY,KAAK,CAAC;QAC/B,yBAAoB,GAAW,EAAE,CAAC;IAI1C,CAAC;IAED,uCAAQ,GAAR;IACA,CAAC;IAED,yCAAU,GAAV;QACE,EAAE,EAAC,IAAI,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,sBAAsB,GAAG,yBAAyB,CAAC;YACxD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,eAAe,KAAK,SAAS,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,sBAAsB,GAAE,0CAA0C,CAAC;YACxE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAC9E,CAAC;IAED,uCAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,iBAAiB,KAAK,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,oBAAoB,GAAG,yBAAyB,CAAC;YACtD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC;QACT,CAAC;QAED,EAAE,EAAC,IAAI,CAAC,MAAM,KAAK,EAAE,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,oBAAoB,GAAG,2BAA2B,CAAC;YACxD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC;QACT,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAE3B,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEjE,mEAAmE;QACnE,4CAA4C;IAC9C,CAAC;IAzDU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAgBmC,6DAAa;OAfrC,oBAAoB,CA2DhC;IAAD,2BAAC;CAAA;AA3DgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVU;AACJ;AACL;AAElC;;GAEG;AAKH;IAGE;QACE,IAAI,CAAC,MAAM,GAAG,wDAAU,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;IACd,CAAC;IAED;;OAEG;IACK,4BAAI,GAAZ;QACE,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,GAAQ;YACjC,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QACpD,CAAC,CAAC;IACJ,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,+CAAU,CAAM,kBAAQ;YACjC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,kBAAkB,EAAE,UAAC,GAAQ;gBAC1C,sCAAsC;gBACtC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,oCAAY,GAAZ;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,+CAAU,CAAM,kBAAQ;YACjC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,oBAAoB,EAAE,UAAC,GAAQ;gBAC5C,sCAAsC;gBACtC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED,wCAAgB,GAAhB;QAAA,iBAOC;QANC,MAAM,CAAC,IAAI,+CAAU,CAAM,kBAAQ;YACjC,KAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,EAAE,UAAC,GAAQ;gBACzC,qCAAqC;gBACrC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAGD;;OAEG;IAEH,oCAAY,GAAZ,UAAa,MAAc,EAAE,IAAY,EAAE,MAAc;QACvD,IAAM,OAAO,GAAG;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,MAAM;SACd;QACD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,kCAAU,GAAV,UAAW,IAAY,EAAE,UAAkB;QACzC,IAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI;YACV,UAAU,EAAE,UAAU;SACvB;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC3C,CAAC;IAED,gCAAQ,GAAR,UAAS,IAAY,EAAE,MAAc;QACnC,IAAM,OAAO,GAAG;YACd,IAAI,EAAE,IAAI;YACV,MAAM,EAAE,MAAM;SACf;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IAChD,CAAC;IA3EU,aAAa;QAJzB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;;OAEW,aAAa,CAqFzB;IAAD,oBAAC;CAAA;AArFyB;;;;;;;;;;;;;ACX1B;AAAA;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;ACdnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACXlC,e","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#gameboard-container {\\n  position: relative;\\n  top: 30px;\\n  text-align: center;\\n}\\n\\n#gameboard {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  width: 75%;\\n}\\n\\n#toast-button {\\n  margin-top: 50px;\\n}\\n\\n.game-title {\\n  margin-top: 10px;\\n  display: block;\\n  text-align: center;\\n}\\n\\n.room-id {\\n  margin: 6px 4px 0px 0px;\\n}\\n\\n.uppper-left-room-id {\\n  margin: 6px 4px 5px 0px;\\n}\\n\"","module.exports = \"<div *ngIf=\\\"showRoomId\\\" class=\\\"uppper-left-room-id\\\">Room ID: {{ roomId }}</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row game-title\\\">\\n    <h1>\\n      {{ title }}\\n    </h1>\\n  </div>\\n  \\n  <div *ngIf=\\\"!isConnectedToGame\\\">\\n    <app-landing-page></app-landing-page>\\n  </div>\\n  \\n  <div *ngIf=\\\"isConnectedToGame\\\">\\n    <app-game></app-game>\\n  </div>\\n</div>\\n\\n<ng-template #choosePlayerModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Welcome to Clue-Less!</h4>\\n    <span class=\\\"room-id\\\">Room ID: {{ roomId }}</span>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <label>Please select a player:</label>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"colonelMustard\\\" name=\\\"character\\\" value=\\\"Colonel Mustard\\\">\\n            Colonel Mustard\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"missScarlet\\\" name=\\\"character\\\" value=\\\"Miss Scarlet\\\">\\n            Miss Scarlet\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrGreen\\\" name=\\\"character\\\" value=\\\"Mr. Green\\\">\\n              Mr. Green\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrsPeacock\\\" name=\\\"character\\\" value=\\\"Mrs. Peacock\\\">\\n            Mrs. Peacock\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"mrWhite\\\" name=\\\"character\\\" value=\\\"Mr. White\\\">\\n            Mr. White\\n          </label>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label>\\n            <input type=\\\"radio\\\" id=\\\"professorPlum\\\" name=\\\"character\\\" value=\\\"Professor Plum\\\">\\n            Professor Plum\\n          </label>\\n        </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleCharacterSelected()\\\">Play!</button>\\n  </div>\\n</ng-template>\\n\\n\\n<button id=\\\"select-character-modal\\\" hidden (click)=\\\"openModal(choosePlayerModal)\\\"></button>\\n  \\n  \"","import { SocketService } from './socket.service';\nimport { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  private title: string = 'Clue-Less';\n  private isConnectedToGame: boolean;\n  private roomId: string;\n  private name: string;\n\n  private showRoomId: boolean;\n\n  constructor(private modalService: NgbModal,\n              private socketService: SocketService) {\n\n  }\n\n  ngOnInit() {\n    this.isConnectedToGame = false;\n    this.showRoomId = false;\n    // when a new game is created\n    this.socketService.onNewGameCreated().subscribe((msg) => {\n      console.log('onNewGameCreated received from app component.');\n      this.name = msg.name;\n      this.roomId = msg.roomId;\n      this.showRoomId = true;\n      // console.log(`name: ${this.name}`);\n      // console.log(`roomId: ${this.roomId}`);\n      this.showSelectCharacterModal();\n      \n    });\n\n    // when a new game is joined\n    this.socketService.onGameJoined().subscribe((msg) => {\n      console.log('onGameJoined received from app component.');\n      this.name = msg.name;\n      this.roomId = msg.roomId;\n      const canJoin = msg.canJoin;\n      const takenPieces = msg.takenPieces;\n      this.showRoomId = true;\n      if(!canJoin) {\n        alert('Unable to join game');\n      } else {\n        this.showSelectCharacterModal(takenPieces);\n      }\n      // console.log(`name: ${this.name}`);\n      // console.log(`roomId: ${this.roomId}`);\n    });\n  }\n\n  showSelectCharacterModal(takenPieces: string = undefined) {\n    console.log(takenPieces);\n    if(takenPieces == undefined) {\n      document.getElementById('select-character-modal').click();\n    } else {\n      document.getElementById('select-character-modal').click(); \n      for(let piece of takenPieces) {\n        let elm: any = document.getElementById(piece);\n        if(elm != undefined) {\n          elm.disabled = true;\n        }\n      }\n    }\n    this.isConnectedToGame = true;\n  }\n\n  private openModal(content) {\n    this.modalService.open(content, {size: 'lg',backdrop: 'static', keyboard: false});\n  }\n\n  private handleCharacterSelected() {\n    let colonlel: any = document.getElementById('colonelMustard');\n    let missScarlet: any = document.getElementById('missScarlet');\n    let mrGreen: any = document.getElementById('mrGreen');\n    let mrsPeacock: any = document.getElementById('mrsPeacock');\n    let mrWhite: any = document.getElementById('mrWhite');\n    let professorPlum: any = document.getElementById('professorPlum');\n\n    let selectedCharacter;\n    if(colonlel.checked) {\n      selectedCharacter = 'colonelMustard';\n    } else if (missScarlet.checked) {\n      selectedCharacter = 'missScarlet';\n    } else if(mrGreen.checked) {\n      selectedCharacter = 'mrGreen';\n    } else if(mrsPeacock.checked) {\n      selectedCharacter = 'mrsPeacock';\n    } else if(mrWhite.checked) {\n      selectedCharacter = 'mrWhite';\n    } else if(professorPlum.checked) {\n      selectedCharacter = 'professorPlum';\n    }\n\n    console.log('Player selected: ' + selectedCharacter);\n    if(selectedCharacter != undefined) {\n      this.socketService.choosePlayer(this.roomId, this.name, selectedCharacter);\n      // if an elemnent is selected dismiss modal\n      this.modalService.dismissAll();\n    }\n    \n  }\n}\n","import { SocketService } from './socket.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'; \nimport { NgModule } from '@angular/core';\nimport { ToastrModule } from 'ngx-toastr';\nimport { NgbModule, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    NgbModule.forRoot(),\n    ToastrModule.forRoot(), // ToastrModule added\n  ],\n  providers: [NgbActiveModal],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"#gameboard {\\n    margin: 25px auto;\\n    width: 50%;\\n}\"","module.exports = \"<div id=\\\"gameboard-container\\\" class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <img id=\\\"gameboard\\\" src=\\\"../../assets/gameboard.jpg\\\" />\\n  </div>\\n  <div class=\\\"row\\\">\\n    <button id=\\\"toast-button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showToaster()\\\">\\n      Show Toast\\n    </button>\\n\\n    <button id=\\\"suggest-player-modal\\\" class=\\\"btn btn-primary\\\" (click)=\\\"openModal(suggestionModal)\\\">Make a suggestion</button>\\n  </div>\\n</div>\\n\\n<ng-template #suggestionModal let-modal>\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" id=\\\"modal-basic-title\\\">Make a suggestion</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"modal.dismiss('Cross click')\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n    <form>\\n      <label>Suggest a player:</label>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"colonelMustard\\\" name=\\\"character\\\" value=\\\"Colonel Mustard\\\">\\n          Colonel Mustard\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"missScarlet\\\" name=\\\"character\\\" value=\\\"Miss Scarlet\\\">\\n          Miss Scarlet\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"mrGreen\\\" name=\\\"character\\\" value=\\\"Mr. Green\\\">\\n          Mr. Green\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"mrsPeacock\\\" name=\\\"character\\\" value=\\\"Mrs. Peacock\\\">\\n          Mrs. Peacock\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"mrWhite\\\" name=\\\"character\\\" value=\\\"Mr. White\\\">\\n          Mr. White\\n        </label>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label>\\n          <input type=\\\"radio\\\" id=\\\"professorPlum\\\" name=\\\"character\\\" value=\\\"Professor Plum\\\">\\n          Professor Plum\\n        </label>\\n      </div>\\n    </form>\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-outline-dark\\\" (click)=\\\"handleSuggestion()\\\">Suggest!</button>\\n  </div>\\n</ng-template>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { SocketService } from '../socket.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  // Dependency injection syntax\n  constructor(private modalService: NgbModal,\n    private socketService: SocketService,\n    private toastr: ToastrService) {\n\n  }\n\n  ngOnInit() {\n    this.socketService.onNewGameCreated().subscribe((msg) => {\n      console.log('newGame received from game component.');\n      // const name = msg.name;\n      // const roomId = msg.roomId;\n      // console.log(`name: ${name}`);\n      // console.log(`roomId: ${roomId}`);\n      this.toastr.success(\"A new game was created: \" + msg.roomId);\n    })\n\n    this.socketService.onPlayerSelected().subscribe((msg) => {\n      console.log('onPlayerSelected received from game component.');\n      const player = msg.player;\n      const socketId = player.socketId;\n      const name = player.name\n      const piece = player.piece;\n      console.log(`socketId: ${socketId}`);\n      console.log(`name: ${name}`);\n      console.log(`piece: ${piece}`);\n      this.toastr.success(`${name} is playing as ${piece}`);\n    })\n  }\n\n  showToaster() {\n    console.log('show toast');\n    this.toastr.success('Hello, I\\'m the toastr message.')\n  }\n\n  /**\n   * A method to handle suggestions from the suggestion modal\n   */\n  handleSuggestion() {\n\n  }\n\n  openModal(content) {\n    this.modalService.open(content, {\n      size: 'lg',\n    });\n  }\n\n}\n","module.exports = \".header-menu {\\n  width: 60%;\\n  margin: 27px auto;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.form-title {\\n  text-align: center;\\n}\\n\\n.how-to-play-header {\\n  text-align: center;\\n}\\n\\nselect:required:invalid {\\n  color: gray;\\n}\\n\\noption[value=\\\"\\\"][disabled] {\\n  display: none;\\n}\\n\\noption {\\n  color: black;\\n}\\n\\np {\\n  margin-bottom: 8px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"menu\\\">\\n    <div class=\\\"header-menu\\\">\\n      <h3 class=\\\"how-to-play-header\\\">How To Play</h3>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Create a new game</h4>\\n        <div>\\n          <p>1. Enter a username and select the number of players</p>\\n          <p>2. Click on new game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"creatorPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Enter your name\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <!-- <input [(ngModel)]=\\\"numberOfPlayers\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" placeholder=\\\"Enter the number of players\\\"\\n              required> -->\\n              <select [(ngModel)]=\\\"numberOfPlayers\\\" name=\\\"numberOfPlayers\\\" class=\\\"form-control\\\">\\n                  <option disabled selected>Select the number of players</option>\\n                  <option value=\\\"3\\\">3</option>\\n                  <option value=\\\"4\\\">4</option>\\n                  <option value=\\\"5\\\">5</option>\\n                  <option value=\\\"6\\\">6</option>\\n              </select>\\n\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"createGame()\\\">New Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"createGameError\\\">\\n          <p>{{ createGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n    <br />\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col col-6 offset-3\\\">\\n        <h4 class=\\\"form-title\\\">Join an existing game</h4>\\n        <div>\\n          <p>1. Enter a username and the room id.</p>\\n          <p>2. Click on join game.</p>\\n        </div>\\n        <form>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"joiningPlayerName\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\" id=\\\"nameJoin\\\"\\n              placeholder=\\\"Enter your name\\\" required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <input [(ngModel)]=\\\"roomId\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"room\\\" id=\\\"room\\\" placeholder=\\\"Enter Game ID\\\"\\n              required>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <button id=\\\"join\\\" class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"joinGame()\\\">Join Game</button>\\n          </div>\\n        </form>\\n        <div class=\\\"row error\\\" *ngIf=\\\"joinGameError\\\">\\n          <p>{{ joinGameErrorMessage }}</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SocketService } from './../socket.service';\nimport { JoinGame } from 'src/messages/JoinGame';\nimport { CreateGame } from './../../messages/CreateGame';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n  // @Output() landingPageStatusChange = new EventEmitter();\n\n  private creatorPlayerName: string = '';\n  private numberOfPlayers: number;\n  private createGameError: boolean = false;\n  private createGameErrorMessage: string = '';\n\n  private joiningPlayerName: string = '';\n  private roomId: string = '';\n  private joinGameError: boolean = false;\n  private joinGameErrorMessage: string = '';\n\n  // Dependency injection syntax\n  constructor(private socketService: SocketService) {   \n  }\n\n  ngOnInit() {\n  }\n\n  createGame(): void {\n    if(this.creatorPlayerName === '') {\n      this.createGameErrorMessage = 'Please enter your name.';\n      this.createGameError = true;\n      return;\n    }\n\n    if(this.numberOfPlayers === undefined) {\n      this.createGameErrorMessage ='Please enter the number of players name.';\n      this.createGameError = true;\n      return;\n    }\n\n    this.createGameError = false;\n    this.socketService.createGame(this.creatorPlayerName, this.numberOfPlayers);\n  }\n\n  joinGame(): void {\n    if(this.joiningPlayerName === '') {\n      this.joinGameErrorMessage = 'Please enter your name.';\n      this.joinGameError = true;\n      return;\n    }\n\n    if(this.roomId === '') {\n      this.joinGameErrorMessage = 'Please enter the room id.';\n      this.joinGameError = true;\n      return;\n    }\n\n    this.joinGameError = false;\n\n    this.socketService.joinGame(this.joiningPlayerName, this.roomId);\n\n    // const event = new JoinGame(this.joiningPlayerName, this.roomId);\n    // this.landingPageStatusChange.emit(event);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as io from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n/**\n * Singleton service\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SocketService {\n  private socket: SocketIOClient.Socket;\n\n  constructor() {\n    this.socket = io.connect();\n    this.init();\n  }\n\n  /**\n   * Socket events from server.\n   */\n  private init() {\n    console.log('initializing sockets');\n    this.socket.on('connect', (msg: any) => {\n      console.log('connection received from server...');\n    })\n  }\n\n  onNewGameCreated() {\n    return new Observable<any>(observer => {\n      this.socket.on('new-game-created', (msg: any) => {\n        // console.log('new game created...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onGameJoined() {\n    return new Observable<any>(observer => {\n      this.socket.on('player-joined-game', (msg: any) => {\n        // console.log('new game created...');\n        observer.next(msg);\n      })\n    })\n  }\n\n  onPlayerSelected() {\n    return new Observable<any>(observer => {\n      this.socket.on('player-selected', (msg: any) => {\n        // console.log('player selected...');\n        observer.next(msg);\n      })\n    })\n  }\n\n\n  /**\n   * Socket events to server.\n   */\n  \n  choosePlayer(roomId: string, name: string, player: string) {\n    const message = {\n      roomId: roomId,\n      name: name,\n      piece: player\n    }\n    this.socket.emit('select-player', message);\n  }\n\n  createGame(name: string, numPlayers: number) {\n    const message = {\n      name: name,\n      numPlayers: numPlayers\n    }\n\n    this.socket.emit('create-game', message);\n  }\n\n  joinGame(name: string, roomId: string) {\n    const message = {\n      name: name,\n      roomId: roomId\n    }\n\n    this.socket.emit('player-join-game', message);\n  }\n\n  //https://stackoverflow.com/questions/47161589/how-to-use-socket-io-client-in-angular-4\n  // sendMessage(messageText: string) {\n  //   const message = {\n  //     text: messageText\n  //   };\n  //   this.socket.emit('send-message', message);\n  //   // console.log(message.text);\n  // }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"sourceRoot":""}